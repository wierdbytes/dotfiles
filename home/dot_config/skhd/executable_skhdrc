# focus windows
rcmd + rctrl + ralt + rshift - k : yabai -m window --focus stack.next || yabai -m window --focus south || yabai -m window --focus stack.first ; sketchybar --trigger window_focus
rcmd + rctrl + ralt + rshift - i : yabai -m window --focus stack.prev || yabai -m window --focus north || yabai -m window --focus stack.last ; sketchybar --trigger window_focus
rcmd + rctrl + ralt + rshift - j : yabai -m window --focus west ; sketchybar --trigger window_focus
rcmd + rctrl + ralt + rshift - l : yabai -m window --focus east ; sketchybar --trigger window_focus

# move window and split
lshift + rcmd + rctrl + ralt + rshift - k : yabai -m window --warp south ; sketchybar --trigger window_focus
lshift + rcmd + rctrl + ralt + rshift - i : yabai -m window --warp north ; sketchybar --trigger window_focus
lshift + rcmd + rctrl + ralt + rshift - j : yabai -m window --warp west ; sketchybar --trigger window_focus
lshift + rcmd + rctrl + ralt + rshift - l : yabai -m window --warp east ; sketchybar --trigger window_focus

# stacked windows
lcmd + rcmd + rctrl + ralt + rshift - j : $HOME/.config/skhd/yabai-stack west ; sketchybar --trigger window_focus
lcmd + rcmd + rctrl + ralt + rshift - l : $HOME/.config/skhd/yabai-stack east ; sketchybar --trigger window_focus
lcmd + rcmd + rctrl + ralt + rshift - i : $HOME/.config/skhd/yabai-stack north ; sketchybar --trigger window_focus
lcmd + rcmd + rctrl + ralt + rshift - k : $HOME/.config/skhd/yabai-stack south ; sketchybar --trigger window_focus

# maximize a window
lshift + rcmd + rctrl + ralt + rshift - f : yabai -m window --toggle zoom-fullscreen; sketchybar --trigger window_focus
lalt + rcmd + rctrl + ralt + rshift - f : yabai -m window --toggle float; sketchybar --trigger window_focus

# balance out tree of windows (resize to occupy same area)
shift + alt - e : yabai -m space --balance

# fn - i : yabai -m query --spaces --space \
#   | jq -re ".index" \
#   | xargs -I{} yabai -m query --windows --space {} \
#   | jq -sre 'add | map(select(."is-minimized"==false)) | sort_by(.display, .frame.y, .frame.x, .id) | . as $array | length as $array_length | index(map(select(."has-focus"==true))) as $has_index | if $has_index > 0 then nth($has_index - 1).id else nth($array_length - 1).id end' \
#   | xargs -I{} yab2ai -m window --focus {}

# fn - k : yabai -m query --spaces --space \
#   | jq -re ".index" \
#   | xargs -I{} yabai -m query --windows --space {} \
#   | jq -sre 'add | map(select(."is-minimized"==false)) | sort_by(.display, .frame.y, .frame.x, .id) | . as $array | length as $array_length | index(map(select(."has-focus"==true))) as $has_index | if $array_length - 1 > $has_index then nth($has_index + 1).id else nth(0).id end' \
#   | xargs -I{} yabai -m window --focus {}

rcmd + rctrl + ralt + rshift - h : yabai -m window --toggle split


# move window to space #
lshift + rcmd + rctrl + ralt + rshift - 1 : yabai -m window --space 1 && sketchybar --trigger windows_on_spaces
lshift + rcmd + rctrl + ralt + rshift - 2 : yabai -m window --space 2 && sketchybar --trigger windows_on_spaces
lshift + rcmd + rctrl + ralt + rshift - 3 : yabai -m window --space 3 && sketchybar --trigger windows_on_spaces
lshift + rcmd + rctrl + ralt + rshift - 4 : yabai -m window --space 4 && sketchybar --trigger windows_on_spaces
lshift + rcmd + rctrl + ralt + rshift - 5 : yabai -m window --space 5 && sketchybar --trigger windows_on_spaces
lshift + rcmd + rctrl + ralt + rshift - 6 : yabai -m window --space 6 && sketchybar --trigger windows_on_spaces
lshift + rcmd + rctrl + ralt + rshift - 7 : yabai -m window --space 7 && sketchybar --trigger windows_on_spaces
lshift + rcmd + rctrl + ralt + rshift - 8 : yabai -m window --space 8 && sketchybar --trigger windows_on_spaces
lshift + rcmd + rctrl + ralt + rshift - 9 : yabai -m window --space 9 && sketchybar --trigger windows_on_spaces

# new iTerm2 window
# rcmd + rctrl + ralt + rshift - y : osascript -e 'tell application "iTerm" to create window with default profile'

# toggle stack / bsp modes
rcmd + rctrl + ralt + rshift - v: yabai -m space --layout $(yabai -m query --spaces --space | jq -r 'if .type == "bsp" then "stack" else "bsp" end')

# reload/restart wm services
lctrl + rcmd + rctrl + ralt + rshift - y: yabai --restart-service
lctrl + rcmd + rctrl + ralt + rshift - b: sketchybar --reload
lctrl + rcmd + rctrl + ralt + rshift - k: skhd --restart-service

# yabai toggle gaps
rcmd + rctrl + ralt + rshift - b: yabai -m space --toggle gap && yabai -m space --toggle padding

# toggle icons of stackline
lshift + rcmd + rctrl + ralt + rshift - b: hs -c "stackline.config:toggle('appearance.showIcons')"